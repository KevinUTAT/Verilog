|servoOut
CLOCK_50 => CLOCK_50.IN1
SW[0] => SW[0].IN2
SW[1] => SW[1].IN2
SW[2] => SW[2].IN2
SW[3] => SW[3].IN2
SW[4] => SW[4].IN2
SW[5] => SW[5].IN2
SW[6] => SW[6].IN2
SW[7] => SW[7].IN2
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
KEY[0] => KEY[0].IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
GPIO_0[0] <= <GND>
GPIO_0[1] <= <GND>
GPIO_0[2] <= <GND>
GPIO_0[3] <= <GND>
GPIO_0[4] <= <GND>
GPIO_0[5] <= <GND>
GPIO_0[6] <= <GND>
GPIO_0[7] <= <GND>
GPIO_0[8] <= <GND>
GPIO_0[9] <= <GND>
GPIO_0[10] <= <GND>
GPIO_0[11] <= <GND>
GPIO_0[12] <= <GND>
GPIO_0[13] <= <GND>
GPIO_0[14] <= <GND>
GPIO_0[15] <= <GND>
GPIO_0[16] <= <GND>
GPIO_0[17] <= <GND>
GPIO_0[18] <= <GND>
GPIO_0[19] <= <GND>
GPIO_0[20] <= <GND>
GPIO_0[21] <= <GND>
GPIO_0[22] <= <GND>
GPIO_0[23] <= <GND>
GPIO_0[24] <= <GND>
GPIO_0[25] <= <GND>
GPIO_0[26] <= <GND>
GPIO_0[27] <= <GND>
GPIO_0[28] <= <GND>
GPIO_0[29] <= <GND>
GPIO_0[30] <= <GND>
GPIO_0[31] <= <GND>
GPIO_0[32] <= <GND>
GPIO_0[33] <= <GND>
GPIO_0[34] <= servos:sev.servoY
GPIO_0[35] <= servos:sev.servoP
HEX0[0] <= hex_decoder:hex0.port1
HEX0[1] <= hex_decoder:hex0.port1
HEX0[2] <= hex_decoder:hex0.port1
HEX0[3] <= hex_decoder:hex0.port1
HEX0[4] <= hex_decoder:hex0.port1
HEX0[5] <= hex_decoder:hex0.port1
HEX0[6] <= hex_decoder:hex0.port1
HEX1[0] <= hex_decoder:hex1.port1
HEX1[1] <= hex_decoder:hex1.port1
HEX1[2] <= hex_decoder:hex1.port1
HEX1[3] <= hex_decoder:hex1.port1
HEX1[4] <= hex_decoder:hex1.port1
HEX1[5] <= hex_decoder:hex1.port1
HEX1[6] <= hex_decoder:hex1.port1


|servoOut|servos:sev
clk => clk.IN2
data_in[0] => dinP[4].IN1
data_in[1] => dinP[5].IN1
data_in[2] => dinP[6].IN1
data_in[3] => dinP[7].IN1
data_in[4] => dinY[4].IN1
data_in[5] => dinY[5].IN1
data_in[6] => dinY[6].IN1
data_in[7] => dinY[7].IN1
data_in[8] => ~NO_FANOUT~
data_in[9] => ~NO_FANOUT~
data_in[10] => ~NO_FANOUT~
data_in[11] => ~NO_FANOUT~
data_in[12] => ~NO_FANOUT~
data_in[13] => ~NO_FANOUT~
data_in[14] => ~NO_FANOUT~
data_in[15] => ~NO_FANOUT~
resetn => resetn.IN2
load => load.IN2
servoP <= servoControl:sevP.sig
servoY <= servoControl:sevY.sig


|servoOut|servos:sev|servoControl:sevP
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => current[0].CLK
clk => current[1].CLK
clk => current[2].CLK
resetn => Mux2.IN7
resetn => next.OUTPUTSELECT
resetn => Mux2.IN4
resetn => next.OUTPUTSELECT
resetn => next.OUTPUTSELECT
resetn => next.OUTPUTSELECT
resetn => clear.OUTPUTSELECT
resetn => current.OUTPUTSELECT
resetn => current.OUTPUTSELECT
resetn => current.OUTPUTSELECT
resetn => always1.IN1
loadP => next.DATAB
posi[0] => Mult0.IN16
posi[1] => Mult0.IN15
posi[2] => Mult0.IN14
posi[3] => Mult0.IN13
posi[4] => Mult0.IN12
posi[5] => Mult0.IN11
posi[6] => Mult0.IN10
posi[7] => Mult0.IN9
sig <= sig$latch.DB_MAX_OUTPUT_PORT_TYPE


|servoOut|servos:sev|servoControl:sevY
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => current[0].CLK
clk => current[1].CLK
clk => current[2].CLK
resetn => Mux2.IN7
resetn => next.OUTPUTSELECT
resetn => Mux2.IN4
resetn => next.OUTPUTSELECT
resetn => next.OUTPUTSELECT
resetn => next.OUTPUTSELECT
resetn => clear.OUTPUTSELECT
resetn => current.OUTPUTSELECT
resetn => current.OUTPUTSELECT
resetn => current.OUTPUTSELECT
resetn => always1.IN1
loadP => next.DATAB
posi[0] => Mult0.IN16
posi[1] => Mult0.IN15
posi[2] => Mult0.IN14
posi[3] => Mult0.IN13
posi[4] => Mult0.IN12
posi[5] => Mult0.IN11
posi[6] => Mult0.IN10
posi[7] => Mult0.IN9
sig <= sig$latch.DB_MAX_OUTPUT_PORT_TYPE


|servoOut|hex_decoder:hex0
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|servoOut|hex_decoder:hex1
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


